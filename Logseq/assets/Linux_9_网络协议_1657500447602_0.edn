{:highlights [{:id #uuid "62cb732b-b451-4d52-a091-f769be693ebd", :page 1, :position {:bounding {:x1 123.88750457763672, :y1 102.2249984741211, :x2 405.815673828125, :y2 150.22500610351562, :width 976, :height 1381.1247070811287}, :rects ({:x1 123.88750457763672, :y1 102.2249984741211, :x2 405.815673828125, :y2 150.22500610351562, :width 976, :height 1381.1247070811287}), :page 1}, :content {:text "9 网络和网络编程"}, :properties {:color "yellow"}} {:id #uuid "62cb7359-5693-4eb8-8252-e2788ffbfb0b", :page 1, :position {:bounding {:x1 125.86250925064087, :y1 165.83750915527344, :x2 429.89400339126587, :y2 203.4375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 165.83750915527344, :x2 429.89400339126587, :y2 203.4375, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "9.1 网络协议和网络模型"}, :properties {:color "yellow"}} {:id #uuid "62cb7405-b460-4582-aaad-09bec7e494ba", :page 1, :position {:bounding {:x1 125.86250925064087, :y1 244.72500610351562, :x2 857.4953370094299, :y2 291.33750915527344, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 548.7089600563049, :y1 244.72500610351562, :x2 857.4953370094299, :y2 266.3249969482422, :width 991.5999333333333, :height 1403.1999666666666} {:x1 711.1374878883362, :y1 247.9250030517578, :x2 857.4953370094299, :y2 263.9250030517578, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 269.7375030517578, :x2 239.68257761001587, :y2 291.33750915527344, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 272.9375, :x2 223.43518686294556, :y2 288.9375, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "发起请求的那一端称作客户端，响应的那一端称作服务端。"}, :properties {:color "yellow"}} {:id #uuid "62cb741a-aa88-49da-9bed-8eb041dd25f9", :page 1, :position {:bounding {:x1 164, :y1 342, :x2 836, :y2 551, :width 991.5999333333333, :height 1403.1999666666666}, :rects (), :page 1}, :content {:text "[:span]", :image 1657500697154}, :properties {:color "blue"}} {:id #uuid "62cb7440-241f-41b0-b689-74533b5b1d9a", :page 1, :position {:bounding {:x1 125.86250925064087, :y1 561.1125183105469, :x2 857.4953370094299, :y2 607.7250061035156, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 759.9125123023987, :y1 561.1125183105469, :x2 857.4953370094299, :y2 582.7124938964844, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 586.125, :x2 337.22006845474243, :y2 607.7250061035156, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 589.3250122070312, :x2 321.02817392349243, :y2 605.3250122070312, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "网络协议规定了通信两端数据交互的规则。"}, :properties {:color "yellow"}} {:id #uuid "62cb7452-9ad3-492b-ab0f-970669293a7f", :page 1, :position {:bounding {:x1 125.86250925064087, :y1 673.6750183105469, :x2 867.4537110328674, :y2 720.2749938964844, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 451.1261353492737, :y1 673.6750183105469, :x2 867.4537110328674, :y2 695.2749938964844, :width 991.5999333333333, :height 1403.1999666666666} {:x1 483.52500009536743, :y1 676.875, :x2 867.4537110328674, :y2 692.875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 698.6750183105469, :x2 467.4087128639221, :y2 720.2749938964844, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "其中OSI网络模型有七层模型：分别是应用层、表示层、会话层、传输层、网络层、数据链路层和物理层，"}, :properties {:color "yellow"}} {:id #uuid "62cb7459-cea3-4dcb-88c7-8a889fb846a7", :page 1, :position {:bounding {:x1 125.86250925064087, :y1 698.6750183105469, :x2 860.9499878883362, :y2 745.2875061035156, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 629.8500123023987, :y1 698.6750183105469, :x2 860.9499878883362, :y2 720.2749938964844, :width 991.5999333333333, :height 1403.1999666666666} {:x1 682.1374878883362, :y1 701.875, :x2 860.9499878883362, :y2 717.875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 723.6875, :x2 597.4965119361877, :y2 745.2875061035156, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 726.8875122070312, :x2 174.66017770767212, :y2 742.8875122070312, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "TCP/IP协议族网络模型，它是四层模型：从上往下依次是应用层、传输层、网络层和网络接口层。"}, :properties {:color "yellow"}} {:id #uuid "62cb747c-a8e2-4d5f-bcb3-e02ef32b7f91", :page 1, :position {:bounding {:x1 125.86250925064087, :y1 773.7124938964844, :x2 836.0703492164612, :y2 820.3250122070312, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 434.8685669898987, :y1 773.7124938964844, :x2 836.0703492164612, :y2 795.3125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 711.1374878883362, :y1 776.9125061035156, :x2 836.0703492164612, :y2 792.9125061035156, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 798.7250061035156, :x2 169.47499704360962, :y2 820.3250122070312, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 801.9250183105469, :x2 153.23140573501587, :y2 817.9250183105469, :width 991.5999333333333, :height 1403.1999666666666}), :page 1}, :content {:text "我们也经常将网络接口层分解成物理层(L1)和数据链路层(L2)。"}, :properties {:color "yellow"}} {:id #uuid "62cb7499-41b4-4951-acc1-c6b67e332b68", :page 2, :position {:bounding {:x1 99, :y1 24, :x2 863, :y2 639, :width 991.5999333333333, :height 1403.1999666666666}, :rects (), :page 2}, :content {:text "[:span]", :image 1657500822621}, :properties {:color "yellow"}} {:id #uuid "62cb74c4-9a72-4eb1-abfe-042e1745d4c2", :page 2, :position {:bounding {:x1 125.86250925064087, :y1 652.4125061035156, :x2 857.7275605201721, :y2 774.0500183105469, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 652.4125061035156, :x2 857.7275605201721, :y2 674.0125122070312, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 677.4250183105469, :x2 857.5331177711487, :y2 699.0249938964844, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 680.625, :x2 857.5331177711487, :y2 696.625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 702.4375, :x2 857.7275605201721, :y2 724.0375061035156, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 705.6375122070312, :x2 857.7275605201721, :y2 721.6375122070312, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 727.4500122070312, :x2 857.7275605201721, :y2 749.0500183105469, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 730.6499938964844, :x2 857.7275605201721, :y2 746.6499938964844, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 752.4500122070312, :x2 304.77063608169556, :y2 774.0500183105469, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "对于用户而言，可以认为每一台主机上的每一层都是一个单独的进程。当数据从一端传输到另一端时，从逻辑上，它需要传输到目标机器上对等的层级，所以网络协议是针对同一层之间的通信生效的，但是单次数据的传送实际上却只能在发生上下层之间或者是网络线缆和网络接口层之间，上层的数据需要调用下层提供的接口将数据转移到下层，然后通过网络线缆转移到目标机器上，再从底层逐步向上传递，直到访问到同一层为止。"}, :properties {:color "yellow"}} {:id #uuid "62cb74f7-6d04-4477-a44f-f040e9d4aabb", :page 2, :position {:bounding {:x1 125.86250925064087, :y1 879.9125061035156, :x2 407.60361337661743, :y2 917.5124969482422, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 879.9125061035156, :x2 407.60361337661743, :y2 917.5124969482422, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "9.2 TCP/IP协议族概览"}, :properties {:color "yellow"}} {:id #uuid "62cb7505-0f9e-4dc3-b192-5189536c7e74", :page 2, :position {:bounding {:x1 125.86250925064087, :y1 933.9875030517578, :x2 407.38208627700806, :y2 965.9875030517578, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 933.9875030517578, :x2 407.38208627700806, :y2 965.9875030517578, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "9.2.1 四层模型的各层实体"}, :properties {:color "yellow"}} {:id #uuid "62cb7583-2d67-4c12-892e-933d17a71a9c", :page 2, :position {:bounding {:x1 125.86250925064087, :y1 983.8125, :x2 862.712408542633, :y2 1243.0249938964844, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 983.8125, :x2 467.4087128639221, :y2 1005.4124984741211, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1021.3249969482422, :x2 862.712408542633, :y2 1042.9250030517578, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1024.5250091552734, :x2 862.712408542633, :y2 1040.5250091552734, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1046.3375091552734, :x2 391.0683045387268, :y2 1067.9375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1049.5375061035156, :x2 391.0683045387268, :y2 1065.5375061035156, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1071.3500061035156, :x2 856.8782105445862, :y2 1092.9499969482422, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1074.5500030517578, :x2 856.8782105445862, :y2 1090.5500030517578, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1096.3625030517578, :x2 504.91855478286743, :y2 1117.9625091552734, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1099.5625, :x2 504.91855478286743, :y2 1115.5625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1121.375, :x2 852.7375245094299, :y2 1142.9750061035156, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1124.5749969482422, :x2 852.7375245094299, :y2 1140.5749969482422, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1146.3875122070312, :x2 667.4078736305237, :y2 1167.9875183105469, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1149.5874938964844, :x2 667.4078736305237, :y2 1165.5874938964844, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1171.3999938964844, :x2 858.8159546852112, :y2 1193, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1174.6000061035156, :x2 858.8159546852112, :y2 1190.6000061035156, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1196.4125061035156, :x2 765.1042695045471, :y2 1218.0125122070312, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1199.6125183105469, :x2 765.1042695045471, :y2 1215.6125183105469, :width 991.5999333333333, :height 1403.1999666666666} {:x1 163.37500619888306, :y1 1221.4250183105469, :x2 423.5958924293518, :y2 1243.0249938964844, :width 991.5999333333333, :height 1403.1999666666666}), :page 2}, :content {:text "在四层模型当中，完成每一层功能的实体如下：网络接口层之物理层：通常指实际传输的物理设备，比如线缆、调制解调器等设备，数据在这些设备中以比特流的形式就行传播。网络接口层之数据链路层：通常是指网卡的驱动程序。该层将比特流转换成数据帧(frame)，MAC地址是用来描述不同的数据链路层设备的地址。网络层：通常指不同的主机。网络层负责将数据帧封装成IP数据报(packet/datagram)。使用IP地址来描述主机在网络层的位置。网络层之间采用逐机跳转的通信方式。传输层：负责将IP数据报封装成TCP段（segment）或UDP报文。该层可以为两台主机的应用程序提供端到端的通信。传输层只关心通信的起始端和目的端，不关心数据的中转过程。应用层：负责处理应用程序的逻辑。"}, :properties {:color "yellow"}} {:id #uuid "62cb7736-f838-4155-96ca-c1368890f4b8", :page 3, :position {:bounding {:x1 125.86250925064087, :y1 588.8250122070312, :x2 407.38208627700806, :y2 620.8250122070312, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 588.8250122070312, :x2 407.38208627700806, :y2 620.8250122070312, :width 991.5999333333333, :height 1403.1999666666666}), :page 3}, :content {:text "9.2.2 协议数据单元的转换"}, :properties {:color "yellow"}} {:id #uuid "62cb77b2-a3f8-42cc-9247-3e311934749c", :page 3, :position {:bounding {:x1 86, :y1 911, :x2 894, :y2 1274, :width 991.5999333333333, :height 1403.1999666666666}, :rects (), :page 3}, :content {:text "[:span]", :image 1657501617081}, :properties {:color "yellow"}} {:id #uuid "62cb77c1-9c1c-483c-9173-48dee275b36c", :page 4, :position {:bounding {:x1 125.86250925064087, :y1 51.07499694824219, :x2 382.9882264137268, :y2 83.07499694824219, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 51.07499694824219, :x2 382.9882264137268, :y2 83.07499694824219, :width 991.5999333333333, :height 1403.1999666666666}), :page 4}, :content {:text "9.2.3 常见协议以及分层"}, :properties {:color "yellow"}} {:id #uuid "62cb77f9-b3f4-4762-a8ed-62e4df863a1e", :page 4, :position {:bounding {:x1 113, :y1 141, :x2 874, :y2 830, :width 991.5999333333333, :height 1403.1999666666666}, :rects (), :page 4}, :content {:text "[:span]", :image 1657501687994}, :properties {:color "purple"}} {:id #uuid "62cb7824-1b9f-42a7-bf47-287027bfe84b", :page 4, :position {:bounding {:x1 125.86250925064087, :y1 843.75, :x2 866.0557618141174, :y2 915.375, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 843.75, :x2 866.0557618141174, :y2 865.3499984741211, :width 991.5999333333333, :height 1403.1999666666666} {:x1 597.3375000953674, :y1 846.9500045776367, :x2 866.0557618141174, :y2 862.9500045776367, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 868.7625045776367, :x2 857.4802613258362, :y2 890.3625030517578, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 871.9625015258789, :x2 857.4802613258362, :y2 887.9625015258789, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 893.7750091552734, :x2 158.39505624771118, :y2 915.375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 896.9750061035156, :x2 142.12500619888306, :y2 912.9750061035156, :width 991.5999333333333, :height 1403.1999666666666}), :page 4}, :content {:text "虽然说我们可以将每一层都看成是一个独立的进程，但是在实际的Linux系统中，数据链路层、网络层和传输层的各种协议的相关代码已经由内核开发者写好，并且以内核线程的形式运行，我们称为内核协议栈。"}, :properties {:color "yellow"}} {:id #uuid "62cb78b3-a1de-4380-aad2-babd7cb986c3", :page 4, :position {:bounding {:x1 125.86250925064087, :y1 1035.2875061035156, :x2 279.1101441383362, :y2 1067.2875061035156, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 1035.2875061035156, :x2 279.1101441383362, :y2 1067.2875061035156, :width 991.5999333333333, :height 1403.1999666666666}), :page 4}, :content {:text "9.2.4 ifconfig"}, :properties {:color "yellow"}} {:id #uuid "62cb78bf-8f4f-48e9-aabe-c76ed0a466dc", :page 5, :position {:bounding {:x1 125.86250925064087, :y1 303.70001220703125, :x2 334.2130799293518, :y2 335.70001220703125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 303.70001220703125, :x2 334.2130799293518, :y2 335.70001220703125, :width 991.5999333333333, :height 1403.1999666666666}), :page 5}, :content {:text "9.2.5 本地环回设备"}, :properties {:color "yellow"}} {:id #uuid "62cb78cf-1ede-49ff-8b89-180a156331e2", :page 5, :position {:bounding {:x1 125.86250925064087, :y1 467.2250061035156, :x2 259.2021851539612, :y2 504.82501220703125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 467.2250061035156, :x2 259.2021851539612, :y2 504.82501220703125, :width 991.5999333333333, :height 1403.1999666666666}), :page 5}, :content {:text "9.3 以太网"}, :properties {:color "yellow"}} {:id #uuid "62cb78de-5ee8-430d-996b-e502f6ebd14e", :page 5, :position {:bounding {:x1 125.86250925064087, :y1 521.3000183105469, :x2 358.6068787574768, :y2 553.3000183105469, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 521.3000183105469, :x2 358.6068787574768, :y2 553.3000183105469, :width 991.5999333333333, :height 1403.1999666666666}), :page 5}, :content {:text "9.3.1 以太网和交换机"}, :properties {:color "yellow"}} {:id #uuid "62cb7923-cbac-40d3-9a02-0932b94a1cb3", :page 5, :position {:bounding {:x1 125.86250925064087, :y1 1212.6750183105469, :x2 860.2583985328674, :y2 1259.2749938964844, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 434.8685669898987, :y1 1212.6750183105469, :x2 860.2583985328674, :y2 1234.2749938964844, :width 991.5999333333333, :height 1403.1999666666666} {:x1 564.8125367164612, :y1 1215.875, :x2 860.2583985328674, :y2 1231.875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 1237.6750183105469, :x2 855.3732666969299, :y2 1259.2749938964844, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 1240.875, :x2 643.9568238258362, :y2 1256.875, :width 991.5999333333333, :height 1403.1999666666666}), :page 5}, :content {:text "交换机拥有自己的MAC地址，并且有许多对外连接的接口，通过一段时间的“学习”，交换机可以构建一个列表，里面存储了目的MAC地址和接口编号的对应关系。"}, :properties {:color "yellow"}} {:id #uuid "62cb7929-2f88-41f4-8719-6128340ad96c", :page 6, :position {:bounding {:x1 125.86250925064087, :y1 51.07500457763672, :x2 285.4253602027893, :y2 83.07499694824219, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 51.07500457763672, :x2 285.4253602027893, :y2 83.07499694824219, :width 991.5999333333333, :height 1403.1999666666666}), :page 6}, :content {:text "9.3.2 以太网帧"}, :properties {:color "yellow"}} {:id #uuid "62cb798f-10a5-4d05-8d02-2184cbd08400", :page 6, :position {:bounding {:x1 125.86250925064087, :y1 100.90000915527344, :x2 864.1560425758362, :y2 272.57501220703125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 100.90000915527344, :x2 857.6164917945862, :y2 122.5, :width 991.5999333333333, :height 1403.1999666666666} {:x1 353.4750123023987, :y1 104.10000610351562, :x2 857.6164917945862, :y2 120.10000610351562, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 125.91250610351562, :x2 852.8625245094299, :y2 147.5124969482422, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 129.1125030517578, :x2 852.8625245094299, :y2 145.1125030517578, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 150.9250030517578, :x2 825.1427979469299, :y2 172.52500915527344, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 154.125, :x2 825.1427979469299, :y2 170.125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 175.9375, :x2 859.1526246070862, :y2 197.53750610351562, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 179.1374969482422, :x2 859.1526246070862, :y2 195.13751220703125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 200.95001220703125, :x2 853.2927613258362, :y2 222.55001831054688, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 204.14999389648438, :x2 853.2927613258362, :y2 220.14999389648438, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 225.96249389648438, :x2 864.1560425758362, :y2 247.5625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 229.16250610351562, :x2 864.1560425758362, :y2 245.16250610351562, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 250.97500610351562, :x2 255.94272470474243, :y2 272.57501220703125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 254.17501831054688, :x2 190.91773080825806, :y2 270.1750183105469, :width 991.5999333333333, :height 1403.1999666666666}), :page 6}, :content {:text "以太网中处理的协议数据单元是以太网帧，下面帧结构做一个简短的介绍。一个典型以太网帧如下图所示：由目的地址（6字节）、源地址（6字节）、类型（2字节）、变长的数据（46~1500字节，所以以太网的MTU是1500）和CRC（4个字节）。在目的地址和源地址字段当中填写的是设备的硬件地址（MAC地址），而不是主机的IP地址。类型字段中说明以太网帧载荷的类型，如果载荷类型是IPv4数据报，那么类型的内容就是16进制的0800。数据字段的长度范围是46字节到1500字节，如果IP数据报的内容不足46个字节，则会在末尾填充（padding）上0。CRC部分是一种校验码，用于校验数据传递过程是否出现比特跳变"}, :properties {:color "yellow"}} {:id #uuid "62cb79c1-1123-4664-a378-d8bc2300cab0", :page 6, :position {:bounding {:x1 112, :y1 281, :x2 890, :y2 697, :width 991.5999333333333, :height 1403.1999666666666}, :rects (), :page 6}, :content {:text "[:span]", :image 1657502144517}, :properties {:color "yellow"}} {:id #uuid "62cb79c5-67be-4956-86e5-3ba59fd12047", :page 6, :position {:bounding {:x1 125.86250925064087, :y1 712.6374969482422, :x2 284.88770151138306, :y2 744.6374969482422, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 712.6374969482422, :x2 284.88770151138306, :y2 744.6374969482422, :width 991.5999333333333, :height 1403.1999666666666}), :page 6}, :content {:text "9.3.3 ARP协议"}, :properties {:color "yellow"}} {:id #uuid "62cb7a19-e65c-40e6-a887-bd82424d52be", :page 6, :position {:bounding {:x1 125.86250925064087, :y1 812.4875183105469, :x2 844.9351563453674, :y2 859.1000061035156, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 516.0400757789612, :y1 812.4875183105469, :x2 844.9351563453674, :y2 834.0874938964844, :width 991.5999333333333, :height 1403.1999666666666} {:x1 516.0500245094299, :y1 815.6875, :x2 844.9351563453674, :y2 831.6875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 837.5, :x2 239.32268381118774, :y2 859.1000061035156, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 840.7000122070312, :x2 190.55261850357056, :y2 856.7000122070312, :width 991.5999333333333, :height 1403.1999666666666}), :page 6}, :content {:text "IP地址和MAC地址之间的映射转换——这就是ARP协议的作用"}, :properties {:color "yellow"}} {:id #uuid "62cb7a78-01f9-47c0-a8fc-411f5cb3648c", :page 6, :position {:bounding {:x1 125.86250925064087, :y1 900.0250091552734, :x2 863.5779175758362, :y2 1046.6875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 900.0250091552734, :x2 861.6279664039612, :y2 921.625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 629.8500123023987, :y1 903.2250061035156, :x2 861.6279664039612, :y2 919.2250061035156, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 925.0375061035156, :x2 855.4953370094299, :y2 946.6374969482422, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 928.2375030517578, :x2 855.4953370094299, :y2 944.2375030517578, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 950.0500030517578, :x2 853.2479615211487, :y2 971.6500091552734, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 953.25, :x2 853.2479615211487, :y2 969.25, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 975.0625, :x2 863.5779175758362, :y2 996.6625061035156, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 978.2624969482422, :x2 863.5779175758362, :y2 994.2625122070312, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 1000.0750122070312, :x2 861.2834229469299, :y2 1021.6750183105469, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 1003.2749938964844, :x2 861.2834229469299, :y2 1019.2749938964844, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 1025.0874938964844, :x2 570.9935669898987, :y2 1046.6875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 1028.2875061035156, :x2 262.02377939224243, :y2 1044.2875061035156, :width 991.5999333333333, :height 1403.1999666666666}), :page 6}, :content {:text "当一台主机接入网络之后，假如它需要向自己所在局域网的设备（假设IP是192.168.3.1）发送数据，那么它就需要知道邻居IP地址和MAC地址之间的映射关系。主机会发送一个ARP请求，ARP请求会向在一个共享的链路层网段上所有主机发送（广播，此时以太网帧的目的MAC每一位都填1），并且获取这个问题的答案“谁拥有IP192.168.3.1，请告知自己的MAC地址？”。IP地址不是192.168.3.1的设备会忽略此请求，但是拥有IP地址192.168.3.1的设备会直接回复一个ARP应答给源主机，在接收到应答之后，源主机再向192.168.3.1发送数据就不再需要广播而是直接交付了。"}, :properties {:color "yellow"}} {:id #uuid "62cb7b31-629d-43aa-9bea-b2ba2248485d", :page 8, :position {:bounding {:x1 125.86250925064087, :y1 50.875, :x2 861.4907593727112, :y2 147.51251220703125, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 50.875, :x2 857.5901246070862, :y2 72.47503662109375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 337.21250009536743, :y1 54.07501220703125, :x2 857.5901246070862, :y2 70.07501220703125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 75.88751220703125, :x2 854.0401368141174, :y2 97.48748779296875, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 79.0875244140625, :x2 854.0401368141174, :y2 95.0875244140625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 100.9000244140625, :x2 861.4907593727112, :y2 122.5, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 104.10003662109375, :x2 861.4907593727112, :y2 120.10003662109375, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 125.91253662109375, :x2 770.4726929664612, :y2 147.51251220703125, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 129.11248779296875, :x2 721.6943116188049, :y2 145.11248779296875, :width 991.5999333333333, :height 1403.1999666666666}), :page 8}, :content {:text "从抓取的报文内容可以得知，arp请求和应答消息的有效部分为28个字节，不足46字节的部分由18个字节的0进行填充。有效部分依次由硬件类型、协议类型、硬件长度、协议长度、Opcode（请求为1，应答为2）、来源MAC地址、来源IP地址、目的MAC地址和目的IP地址。在arp请求中，以太网帧头部的目的MAC地址是广播地址，即全部为1，arp应答的目的MAC地址是其对应请求的MAC地址。"}, :properties {:color "yellow"}} {:id #uuid "62cb7b53-3bd9-4afe-96e7-d96d494e829f", :page 7, :position {:bounding {:x1 128, :y1 728, :x2 828, :y2 1252, :width 991.5999333333333, :height 1403.1999666666666}, :rects (), :page 7}, :content {:text "[:span]", :image 1657502546328}, :properties {:color "yellow"}} {:id #uuid "62cb7b76-cd5c-4625-83eb-9e1ea8d41b1f", :page 8, :position {:bounding {:x1 125.86250925064087, :y1 164.58750915527344, :x2 258.0264344215393, :y2 202.1875, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 164.58750915527344, :x2 258.0264344215393, :y2 202.1875, :width 991.5999333333333, :height 1403.1999666666666}), :page 8}, :content {:text "9.4 IP协议"}, :properties {:color "yellow"}} {:id #uuid "62cb7b9d-056f-49a9-a26d-88927c937c2b", :page 8, :position {:bounding {:x1 125.86250925064087, :y1 218.4625015258789, :x2 855.9154419898987, :y2 315.08750915527344, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 727.7375245094299, :y1 218.4625015258789, :x2 855.9154419898987, :y2 240.0625, :width 991.5999333333333, :height 1403.1999666666666} {:x1 727.7375245094299, :y1 221.6624984741211, :x2 855.9154419898987, :y2 237.66250610351562, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 243.47500610351562, :x2 855.5503296852112, :y2 265.0749969482422, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 246.6750030517578, :x2 855.5503296852112, :y2 262.6750030517578, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 268.4750061035156, :x2 855.6688599586487, :y2 290.0749969482422, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 271.6750030517578, :x2 855.6688599586487, :y2 287.6750030517578, :width 991.5999333333333, :height 1403.1999666666666} {:x1 125.86250925064087, :y1 293.4875030517578, :x2 564.9790253639221, :y2 315.08750915527344, :width 991.5999333333333, :height 1403.1999666666666}), :page 8}, :content {:text "IP提供一种尽力而为（就是不可靠）、无连接的数据报交付服务。不可靠意味着如果传递过程中出现差错，IP层可以选择丢弃数据，并且不会主动重传；无连接意味着IP协议不会记录传递过程中的路径，那同样的两端发生的不同数据报可能会走不同的路径，并且有可能不按顺序到达。"}, :properties {:color "yellow"}} {:id #uuid "62cb7ba9-8aa3-464b-bc59-34ce86590ed9", :page 8, :position {:bounding {:x1 125.86250925064087, :y1 334.96250915527344, :x2 381.99439096450806, :y2 366.9624938964844, :width 991.5999333333333, :height 1403.1999666666666}, :rects ({:x1 125.86250925064087, :y1 334.96250915527344, :x2 381.99439096450806, :y2 366.9624938964844, :width 991.5999333333333, :height 1403.1999666666666}), :page 8}, :content {:text "9.4.1 IP地址以及其分类"}, :properties {:color "yellow"}} {:id #uuid "62cb7d7f-ae34-4e0d-83b5-4f123fd2b8c7", :page 9, :position {:bounding {:x1 120, :y1 43, :x2 879, :y2 388, :width 991.5999333333333, :height 1403.1999666666666}, :rects (), :page 9}, :content {:text "[:span]", :image 1657503101914}, :properties {:color "yellow"}}]}