{:highlights [{:id #uuid "63e7c219-0045-45fc-819b-93545b242b3c", :page 43, :position {:bounding {:x1 163.1875, :y1 1243.953125, :x2 353.6259765625, :y2 1276.953125, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 1243.953125, :x2 353.6259765625, :y2 1276.953125, :width 1387.2, :height 1795.2}), :page 43}, :content {:text "1.2 关键组件"}, :properties {:color "yellow"}} {:id #uuid "63e7c24b-12db-45ec-8f4f-6536c7a6d9c5", :page 44, :position {:bounding {:x1 163.1875, :y1 172.09375, :x2 290.12628173828125, :y2 199.1875, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 172.09375, :x2 290.12628173828125, :y2 199.1875, :width 1387.2, :height 1795.2}), :page 44}, :content {:text "1.2.1 数据"}, :properties {:color "red"}} {:id #uuid "63e7c257-06aa-41ef-954c-983b10129f1b", :page 43, :position {:bounding {:x1 0, :y1 334, :x2 841.2728881835938, :y2 1578.625, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 334, :x2 0, :y2 354, :width 1387.2, :height 1795.2} {:x1 0, :y1 350, :x2 0, :y2 370, :width 1387.2, :height 1795.2} {:x1 0, :y1 366, :x2 0, :y2 386, :width 1387.2, :height 1795.2} {:x1 190.296875, :y1 1409.71875, :x2 522.28125, :y2 1432.296875, :width 1387.2, :height 1795.2} {:x1 190.296875, :y1 1458.5, :x2 542.921875, :y2 1481.078125, :width 1387.2, :height 1795.2} {:x1 190.296875, :y1 1507.265625, :x2 841.2728881835938, :y2 1529.84375, :width 1387.2, :height 1795.2} {:x1 190.296875, :y1 1556.046875, :x2 737.03125, :y2 1578.625, :width 1387.2, :height 1795.2}), :page 43}, :content {:text "1. 我们可以学习的数据（data）。2. 如何转换数据的模型（model）。3. 一个目标函数（objective function），用来量化模型的有效性。4. 调整模型参数以优化目标函数的算法（algorithm）。"}, :properties {:color "purple"}} {:id #uuid "63e7c28f-77a2-4691-8f44-44ec1703b0b4", :page 45, :position {:bounding {:x1 163.1875, :y1 172.09375, :x2 290.12628173828125, :y2 199.1875, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 172.09375, :x2 290.12628173828125, :y2 199.1875, :width 1387.2, :height 1795.2}), :page 45}, :content {:text "1.2.2 模型"}, :properties {:color "red"}} {:id #uuid "63e7c296-1eff-4b1b-8b7a-1ad7ec67ee41", :page 45, :position {:bounding {:x1 163.1875, :y1 464.703125, :x2 344.3307189941406, :y2 491.796875, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 464.703125, :x2 344.3307189941406, :y2 491.796875, :width 1387.2, :height 1795.2}), :page 45}, :content {:text "1.2.3 目标函数"}, :properties {:color "red"}} {:id #uuid "63e7c29c-61e9-4030-8c9c-5bf30b74de5f", :page 45, :position {:bounding {:x1 163.1875, :y1 1326.375, :x2 344.3307189941406, :y2 1353.46875, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 1326.375, :x2 344.3307189941406, :y2 1353.46875, :width 1387.2, :height 1795.2}), :page 45}, :content {:text "1.2.4 优化算法"}, :properties {:color "red"}} {:id #uuid "63e7c2f8-05b9-4c37-9187-64615dceb9ae", :page 45, :position {:bounding {:x1 0, :y1 126, :x2 1224.0013427734375, :y2 625.65625, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 126, :x2 0, :y2 146, :width 1387.2, :height 1795.2} {:x1 524.29931640625, :y1 567.859375, :x2 1224.0013427734375, :y2 589.859375, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 603.078125, :x2 844.2296142578125, :y2 625.65625, :width 1387.2, :height 1795.2}), :page 45}, :content {:text "在机器学习中，我们需要定义模型的优劣程度的度量，这个度量在大多数情况是“可优化”的，我们称之为目标函数（objective function）。"}, :properties {:color "purple"}} {:id #uuid "63e7c35a-ee96-4ff6-beab-26f615e54bab", :page 45, :position {:bounding {:x1 0, :y1 142, :x2 1224.026611328125, :y2 730.765625, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 142, :x2 0, :y2 162, :width 1387.2, :height 1795.2} {:x1 0, :y1 158, :x2 0, :y2 178, :width 1387.2, :height 1795.2} {:x1 0, :y1 174, :x2 0, :y2 194, :width 1387.2, :height 1795.2} {:x1 844.2141723632812, :y1 603.078125, :x2 1224.026611328125, :y2 625.078125, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 638.3125, :x2 1224.0211181640625, :y2 660.890625, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 673.546875, :x2 1224.001220703125, :y2 696.125, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 708.765625, :x2 230.9432373046875, :y2 730.765625, :width 1387.2, :height 1795.2}), :page 45}, :content {:text "我们通常定义一个目标函数，并希望优化它到最低点。因为越低越好，所以这些函数有时被称为损失函数（loss function，或cost function）。但这只是一个惯例，你也可以取一个新的函数，优化到它的最高点。这两个函数本质上是相同的，只是翻转一下符号。"}, :properties {:color "purple"}} {:id #uuid "63e7c41c-bece-4721-b912-9b5419c711da", :page 45, :position {:bounding {:x1 0, :y1 446, :x2 1224.001220703125, :y2 1521.984375, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 446, :x2 0, :y2 466, :width 1387.2, :height 1795.2} {:x1 0, :y1 462, :x2 0, :y2 482, :width 1387.2, :height 1795.2} {:x1 0, :y1 478, :x2 0, :y2 498, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1394.296875, :x2 1224.001220703125, :y2 1416.296875, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1429.53125, :x2 1223.984130859375, :y2 1452.109375, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1464.765625, :x2 1223.984619140625, :y2 1487.34375, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1499.984375, :x2 1089.04736328125, :y2 1521.984375, :width 1387.2, :height 1795.2}), :page 45}, :content {:text "一旦我们获得了一些数据源及其表示、一个模型和一个合适的损失函数，我们接下来就需要一种算法，它能够搜索出最佳参数，以最小化损失函数。深度学习中，大多流行的优化算法通常基于一种基本方法‒梯度下降（gradient descent）。简而言之，在每个步骤中，梯度下降法都会检查每个参数，看看如果你仅对该参数进行少量变动，训练集损失会朝哪个方向移动。然后，它在可以减少损失的方向上优化参数。"}, :properties {:color "purple"}} {:id #uuid "63e7c479-c339-4e04-b46d-ba5f4e2297d1", :page 46, :position {:bounding {:x1 163.1875, :y1 174.609375, :x2 483.705078125, :y2 207.609375, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 174.609375, :x2 483.705078125, :y2 207.609375, :width 1387.2, :height 1795.2}), :page 46}, :content {:text "1.3 各种机器学习问题"}, :properties {:color "yellow"}} {:id #uuid "63e7c488-aa68-4914-9f40-ddc1ce2a21bf", :page 46, :position {:bounding {:x1 163.1875, :y1 410.59375, :x2 344.3307189941406, :y2 437.6875, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 410.59375, :x2 344.3307189941406, :y2 437.6875, :width 1387.2, :height 1795.2}), :page 46}, :content {:text "1.3.1 监督学习"}, :properties {:color "red"}} {:id #uuid "63e7c4a9-4d8c-4f58-bc60-d5810f38c7be", :page 46, :position {:bounding {:x1 0, :y1 78, :x2 1241.3856201171875, :y2 654.984375, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 78, :x2 0, :y2 98, :width 1387.2, :height 1795.2} {:x1 0, :y1 94, :x2 0, :y2 114, :width 1387.2, :height 1795.2} {:x1 0, :y1 110, :x2 0, :y2 130, :width 1387.2, :height 1795.2} {:x1 0, :y1 126, :x2 0, :y2 146, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 478.53125, :x2 1224.0078125, :y2 501.109375, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 513.75, :x2 1241.3856201171875, :y2 536.328125, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 548.984375, :x2 592.2550048828125, :y2 571.5625, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 597.75, :x2 1224.0013427734375, :y2 620.328125, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 632.984375, :x2 976.14697265625, :y2 654.984375, :width 1387.2, :height 1795.2}), :page 46}, :content {:text "监督学习（supervised learning）擅⻓在“给定输入特征”的情况下预测标签。每个“特征-标签”对都称为一个样本（example）。有时，即使标签是未知的，样本也可以指代输入特征。我们的目标是生成一个模型，能够将任何输入特征映射到标签，即预测。举一个具体的例子：假设我们需要预测患者是否会心脏病发作，那么观察结果“心脏病发作”或“心脏病没有发作”将是我们的标签。输入特征可能是生命体征，如心率、舒张压和收缩压。"}, :properties {:color "purple"}} {:id #uuid "63e7c566-cbfd-4713-9058-bcba01e077e9", :page 46, :position {:bounding {:x1 0, :y1 158, :x2 1224.0013427734375, :y2 738.984375, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 158, :x2 0, :y2 178, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 681.765625, :x2 1224.0013427734375, :y2 703.765625, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 716.984375, :x2 230.9432373046875, :y2 738.984375, :width 1387.2, :height 1795.2}), :page 46}, :content {:text "监督学习之所以发挥作用，是因为在训练参数时，我们为模型提供了一个数据集，其中每个样本都有真实的标签。"}, :properties {:color "purple"}} {:id #uuid "63e7c64f-7cd2-4959-af75-e6d2051f96cc", :page 46, :position {:bounding {:x1 0, :y1 270, :x2 1237.335693359375, :y2 1146.046875, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 270, :x2 0, :y2 290, :width 1387.2, :height 1795.2} {:x1 0, :y1 286, :x2 0, :y2 306, :width 1387.2, :height 1795.2} {:x1 0, :y1 302, :x2 0, :y2 322, :width 1387.2, :height 1795.2} {:x1 0, :y1 318, :x2 0, :y2 338, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 982.5625, :x2 1224.0013427734375, :y2 1004.5625, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1017.78125, :x2 1224.01025390625, :y2 1040.359375, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1053.015625, :x2 1224.001708984375, :y2 1075.59375, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1088.234375, :x2 1224.0208740234375, :y2 1110.8125, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1123.46875, :x2 1237.335693359375, :y2 1146.046875, :width 1387.2, :height 1795.2}), :page 46}, :content {:text "非正式地说，监督学习的学习过程如下所示。首先，从已知大量数据样本中随机选取一个子集，为每个样本获取基本的真实标签。有时，这些样本已有标签（例如，患者是否在下一年内康复？）；有时，我们可能需要人工标记数据（例如，将图像分类）。这些输入和相应的标签一起构成了训练数据集。随后，我们选择有监督的学习算法，它将训练数据集作为输入，并输出一个“完成学习模型”。最后，我们将之前没⻅过的样本特征放到这个“完成学习模型”中，使用模型的输出作为相应标签的预测。整个监督学习过程在 图1.3.1 中绘制。"}, :properties {:color "purple"}} {:id #uuid "63e7c658-f107-4306-964c-818f519ba55a", :page 46, :position {:bounding {:x1 296, :y1 1153, :x2 1127, :y2 1482, :width 1387.2, :height 1795.2}, :rects (), :page 46}, :content {:text "[:span]", :image 1676133975721}, :properties {:color "purple"}} {:id #uuid "63e7c68a-6887-424e-98fd-7beced588ca4", :page 47, :position {:bounding {:x1 163.1875, :y1 171.890625, :x2 208.36318969726562, :y2 193.890625, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 171.890625, :x2 208.36318969726562, :y2 193.890625, :width 1387.2, :height 1795.2}), :page 47}, :content {:text "回归"}, :properties {:color "green"}} {:id #uuid "63e7c7dc-e497-4ac2-94cf-5aea9a50963c", :page 47, :position {:bounding {:x1 163.1875, :y1 235.90625, :x2 678.2054443359375, :y2 257.90625, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 235.90625, :x2 678.2054443359375, :y2 257.90625, :width 1387.2, :height 1795.2}), :page 47}, :content {:text "回归（regression）是最简单的监督学习任务之一。"}, :properties {:color "purple"}} {:id #uuid "63e7c7ec-331e-48e5-949c-4ed41caa93ea", :page 47, :position {:bounding {:x1 0, :y1 94, :x2 1224.0009765625, :y2 504.515625, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 94, :x2 0, :y2 114, :width 1387.2, :height 1795.2} {:x1 0, :y1 110, :x2 0, :y2 130, :width 1387.2, :height 1795.2} {:x1 960.6484375, :y1 412.046875, :x2 1223.978515625, :y2 434.046875, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 447.28125, :x2 1224.0009765625, :y2 469.859375, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 482.515625, :x2 569.6751098632812, :y2 504.515625, :width 1387.2, :height 1795.2}), :page 47}, :content {:text "本质上是输出决定的。假设你在市场上寻找新房子，你可能需要估计一栋房子的公平市场价值。销售价格，即标签，是一个数值。当标签取任意数值时，我们称之为回归问题。"}, :properties {:color "purple"}} {:id #uuid "63e7c7fb-5e81-449b-a4ac-bdb5ff84395e", :page 47, :position {:bounding {:x1 0, :y1 142, :x2 1224.00146484375, :y2 658.96875, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 142, :x2 0, :y2 162, :width 1387.2, :height 1795.2} {:x1 0, :y1 158, :x2 0, :y2 178, :width 1387.2, :height 1795.2} {:x1 0, :y1 174, :x2 0, :y2 194, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 531.28125, :x2 1224.00146484375, :y2 553.28125, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 566.515625, :x2 1223.98974609375, :y2 589.09375, :width 1387.2, :height 1795.2} {:x1 185.78125, :y1 598.421875, :x2 201.58853149414062, :y2 614.421875, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 601.734375, :x2 185.78125, :y2 624.3125, :width 1387.2, :height 1795.2} {:x1 202.71875, :y1 601.734375, :x2 1223.995361328125, :y2 624.3125, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 636.96875, :x2 727.735107421875, :y2 658.96875, :width 1387.2, :height 1795.2}), :page 47}, :content {:text "生活中的许多问题都可归类为回归问题。比如，预测用戶对一部电影的评分可以被认为是一个回归问题。这里有一个小插曲，如果你在2009年设计了一个很棒的算法来预测电影评分，你可能会赢得100万美元的奈⻜奖12。再比如，预测病人在医院的住院时间也是一个回归问题。总而言之，判断回归问题的一个很好的经验法则是，任何有关“多少”的问题很可能就是回归问题。"}, :properties {:color "purple"}} {:id #uuid "63e7c842-688e-4527-9c62-a96e13dbc6cd", :page 47, :position {:bounding {:x1 163.1875, :y1 1160.484375, :x2 208.36318969726562, :y2 1182.484375, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 1160.484375, :x2 208.36318969726562, :y2 1182.484375, :width 1387.2, :height 1795.2}), :page 47}, :content {:text "分类"}, :properties {:color "green"}} {:id #uuid "63e7c8f5-870e-452c-8899-194c73571660", :page 47, :position {:bounding {:x1 0, :y1 398, :x2 1224.007568359375, :y2 1352.765625, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 398, :x2 0, :y2 418, :width 1387.2, :height 1795.2} {:x1 0, :y1 414, :x2 0, :y2 434, :width 1387.2, :height 1795.2} {:x1 0, :y1 430, :x2 0, :y2 450, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1224.5, :x2 1224.0050048828125, :y2 1247.078125, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1259.71875, :x2 1224.0013427734375, :y2 1282.296875, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1294.953125, :x2 1224.007568359375, :y2 1317.53125, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1330.1875, :x2 837.3139038085938, :y2 1352.765625, :width 1387.2, :height 1795.2}), :page 47}, :content {:text "虽然回归模型可以很好地解决“有多少？”的问题，但是很多问题并非如此。例如，一家银行希望在其移动应用程序中添加支票扫描功能。具体地说，这款应用程序能够自动理解从图像中看到的文本，并将手写字符映射到对应的已知字符之上。这种“哪一个？”的问题叫做分类（classification）问题。在分类问题中，我们希望模型能够预测样本属于哪个类别（category，正式称为类（class））。"}, :properties {:color "purple"}} {:id #uuid "63e7c910-24ba-4c7f-9304-48c8eb77e039", :page 47, :position {:bounding {:x1 0, :y1 478, :x2 1223.9768371582031, :y2 1457.859375, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 478, :x2 0, :y2 498, :width 1387.2, :height 1795.2} {:x1 406.3479309082031, :y1 1400.640625, :x2 1223.9768371582031, :y2 1422.640625, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1435.859375, :x2 501.919189453125, :y2 1457.859375, :width 1387.2, :height 1795.2}), :page 47}, :content {:text "在回归中，我们训练一个回归函数来输出一个数值；而在分类中，我们训练一个分类器，它的输出即为预测的类别。"}, :properties {:color "purple"}} {:id #uuid "63e7c97b-2bc9-4a5e-8017-3c63341a30af", :page 47, :position {:bounding {:x1 320.89410400390625, :y1 1365.40625, :x2 886.7876586914062, :y2 1387.40625, :width 1387.2, :height 1795.2}, :rects ({:x1 320.89410400390625, :y1 1365.40625, :x2 886.7876586914062, :y2 1387.40625, :width 1387.2, :height 1795.2}), :page 47}, :content {:text "最简单的分类问题是只有两类，我们称之为“二元分类”。"}, :properties {:color "purple"}} {:id #uuid "63e7c981-467f-4d0b-ab5a-208dc3c2a011", :page 48, :position {:bounding {:x1 163.1875, :y1 253.828125, :x2 1110.1409912109375, :y2 275.828125, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 253.828125, :x2 1110.1409912109375, :y2 275.828125, :width 1387.2, :height 1795.2}), :page 48}, :content {:text "当我们有两个以上的类别时，我们把这个问题称为多元分类（multiclass classification）问题。"}, :properties {:color "purple"}} {:id #uuid "63e7c999-c93b-46c9-b204-7269262fc4f4", :page 48, :position {:bounding {:x1 0, :y1 46, :x2 1223.9744873046875, :y2 346.859375, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 46, :x2 0, :y2 66, :width 1387.2, :height 1795.2} {:x1 592.1485595703125, :y1 289.046875, :x2 1223.9744873046875, :y2 311.046875, :width 1387.2, :height 1795.2} {:x1 148.484375, :y1 324.28125, :x2 331.484375, :y2 346.859375, :width 1387.2, :height 1795.2}), :page 48}, :content {:text "与解决回归问题不同，分类问题的常⻅损失函数被称为交叉熵（cross-entropy）"}, :properties {:color "purple"}} {:id #uuid "63e7c9fb-8e5c-4d2b-98cc-d154674f57e8", :page 48, :position {:bounding {:x1 0, :y1 126, :x2 1224.0174560546875, :y2 1111.3125, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 126, :x2 0, :y2 146, :width 1387.2, :height 1795.2} {:x1 0, :y1 142, :x2 0, :y2 162, :width 1387.2, :height 1795.2} {:x1 0, :y1 158, :x2 0, :y2 178, :width 1387.2, :height 1795.2} {:x1 0, :y1 174, :x2 0, :y2 194, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 947.828125, :x2 1223.9747314453125, :y2 970.40625, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 983.046875, :x2 1224.0174560546875, :y2 1005.625, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1018.28125, :x2 1223.9996337890625, :y2 1040.859375, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1053.515625, :x2 1224.0064697265625, :y2 1076.09375, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1088.734375, :x2 975.366455078125, :y2 1111.3125, :width 1387.2, :height 1795.2}), :page 48}, :content {:text "现在，请你训练一个毒蘑菇检测分类器，根据照片预测蘑菇是否有毒。假设这个分类器输出 图1.3.2 包含死帽蕈的概率是0.2。换句话说，分类器80%确定我们的蘑菇不是死帽蕈。尽管如此，我们也不会吃它，因为我们不值得冒20%的死亡⻛险。换句话说，不确定⻛险的影响远远大于收益。因此，我们需要将“预期⻛险”作为损失函数。也就是说，我们需要将结果的概率乘以与之相关的收益（或伤害）。在这种情况下，⻝用蘑菇造成的损失为0.2 × ∞ + 0.8 × 0 = ∞，而丢弃蘑菇的损失为0.2 × 0 + 0.8 × 1 = 0.8。"}, :properties {:color "purple"}} {:id #uuid "63e7cabd-e36b-4f46-8dff-09e9e38a87cb", :page 48, :position {:bounding {:x1 0, :y1 222, :x2 1296.016357421875, :y2 1339.328125, :width 1468.8, :height 1900.8}, :rects ({:x1 0, :y1 222, :x2 0, :y2 242, :width 1468.8, :height 1900.8} {:x1 0, :y1 238, :x2 0, :y2 258, :width 1468.8, :height 1900.8} {:x1 172.796875, :y1 1240.734375, :x2 1296.016357421875, :y2 1264.734375, :width 1468.8, :height 1900.8} {:x1 172.796875, :y1 1278.03125, :x2 1296.01611328125, :y2 1302.03125, :width 1468.8, :height 1900.8} {:x1 172.796875, :y1 1315.328125, :x2 1201.323486328125, :y2 1339.328125, :width 1468.8, :height 1900.8}), :page 48}, :content {:text "分类可能变得比二元分类、多元分类复杂得多。例如，有一些分类任务的变体可以用于寻找层次结构，层次结构假定在许多类之间存在某种关系。因此，并不是所有的错误都是均等的。我们宁愿错误地分入一个相关的类别，也不愿错误地分入一个遥远的类别，这通常被称为层次分类(hierarchical classification)。"}, :properties {:color "purple"}} {:id #uuid "63e7cba0-146c-4506-ab17-9de71254a71b", :page 49, :position {:bounding {:x1 0, :y1 78, :x2 912.80712890625, :y2 318.984375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 78, :x2 0, :y2 98, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 615.5044555664062, :y1 277.078125, :x2 912.80712890625, :y2 293.078125, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 302.984375, :x2 435.4822998046875, :y2 318.984375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 49}, :content {:text "我们可能想让模型描绘输入图像的内容，一只猫、一只狗、一头驴，还有一只公鸡。"}, :properties {:color "purple"}} {:id #uuid "63e7cba4-8d75-4ac0-ba8e-5aa195205530", :page 49, :position {:bounding {:x1 120, :y1 126.390625, :x2 153.20867919921875, :y2 142.390625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 120, :y1 126.390625, :x2 153.20867919921875, :y2 142.390625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 49}, :content {:text "标记"}, :properties {:color "green"}} {:id #uuid "63e7cc26-21eb-4c0d-9dcb-b337c0cb8bd4", :page 49, :position {:bounding {:x1 0, :y1 126, :x2 900.0069580078125, :y2 1006.953125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 126, :x2 0, :y2 146, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 142, :x2 0, :y2 162, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 938.546875, :x2 899.9873046875, :y2 955.15625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 964.4375, :x2 900.0069580078125, :y2 981.046875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 990.34375, :x2 546.1996459960938, :y2 1006.953125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 49}, :content {:text "学习预测不相互排斥的类别的问题称为多标签分类（multi-label classification）。举个例子，人们在技术博客上贴的标签，比如“机器学习”、“技术”、“小工具”、“编程语言”、“Linux”、“云计算”、“AWS”。一篇典型的文章可能会用5-10个标签，因为这些概念是相互关联的。"}, :properties {:color "purple"}} {:id #uuid "63e7cc55-7322-4e32-adc9-dda8ac07cc38", :page 50, :position {:bounding {:x1 120, :y1 126.390625, :x2 153.20867919921875, :y2 142.390625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 120, :y1 126.390625, :x2 153.20867919921875, :y2 142.390625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 50}, :content {:text "搜索"}, :properties {:color "green"}} {:id #uuid "63e7cc7c-3eee-4a66-b3d9-e23e3c62e18a", :page 50, :position {:bounding {:x1 0, :y1 14, :x2 900.005126953125, :y2 241.265625, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 14, :x2 0, :y2 34, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 30, :x2 0, :y2 50, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 173.46875, :x2 900.005126953125, :y2 189.46875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 199.359375, :x2 900.002685546875, :y2 215.96875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 225.265625, :x2 783.834228515625, :y2 241.265625, :width 1019.9999999999999, :height 1319.9999999999998}), :page 50}, :content {:text "有时，我们不仅仅希望输出为一个类别或一个实值。在信息检索领域，我们希望对一组项目进行排序。以网络搜索为例，我们的目标不是简单的“查询（query）-网⻚（page）”分类，而是在海量搜索结果中找到用戶最需要的那部分。搜索结果的排序也十分重要，我们的学习算法需要输出有序的元素子集。"}, :properties {:color "purple"}} {:id #uuid "63e7cda0-eba9-4511-823b-b9c3f8971024", :page 50, :position {:bounding {:x1 120, :y1 476.703125, :x2 186.41732788085938, :y2 492.703125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 120, :y1 476.703125, :x2 186.41732788085938, :y2 492.703125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 50}, :content {:text "推荐系统"}, :properties {:color "green"}} {:id #uuid "63e7cdb8-f1e0-4d29-8082-2437f9d1c624", :page 50, :position {:bounding {:x1 0, :y1 190, :x2 909.470458984375, :y2 565.671875, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 190, :x2 0, :y2 210, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 523.78125, :x2 909.470458984375, :y2 540.390625, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 549.671875, :x2 169.8125, :y2 565.671875, :width 1019.9999999999999, :height 1319.9999999999998}), :page 50}, :content {:text "另一类与搜索和排名相关的问题是推荐系统（recommender system），它的目标是向特定用戶进行“个性化”推荐。"}, :properties {:color "purple"}} {:id #uuid "63e7d03b-9eae-462c-864a-f838b7bca32f", :page 51, :position {:bounding {:x1 120, :y1 892.03125, :x2 186.41732788085938, :y2 908.03125, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 120, :y1 892.03125, :x2 186.41732788085938, :y2 908.03125, :width 1019.9999999999999, :height 1319.9999999999998}), :page 51}, :content {:text "序列学习"}, :properties {:color "green"}} {:id #uuid "63e7d04a-f5ac-4068-bdc6-b419b461ebb7", :page 51, :position {:bounding {:x1 120, :y1 939.09375, :x2 584.6838989257812, :y2 955.09375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 120, :y1 939.09375, :x2 584.6838989257812, :y2 955.09375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 51}, :content {:text "以上大多数问题都具有固定大小的输入和产生固定大小的输出。"}, :properties {:color "purple"}} {:id #uuid "63e7d103-7ad6-4c9f-974f-6e112604f686", :page 51, :position {:bounding {:x1 0, :y1 190, :x2 900.005126953125, :y2 1146.375, :width 1019.9999999999999, :height 1319.9999999999998}, :rects ({:x1 0, :y1 190, :x2 0, :y2 210, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 206, :x2 0, :y2 226, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 0, :y1 222, :x2 0, :y2 242, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 1052.671875, :x2 900.005126953125, :y2 1068.671875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 1078.578125, :x2 900.005126953125, :y2 1095.1875, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 1104.484375, :x2 900.005126953125, :y2 1121.09375, :width 1019.9999999999999, :height 1319.9999999999998} {:x1 120, :y1 1130.375, :x2 269.43896484375, :y2 1146.375, :width 1019.9999999999999, :height 1319.9999999999998}), :page 51}, :content {:text "如果输入的样本之间没有任何关系，以上模型可能完美无缺。但是如果输入是连续的，我们的模型可能就需要拥有“记忆”功能。比如，我们该如何处理视频片段呢？在这种情况下，每个视频片段可能由不同数量的帧组成。通过前一帧的图像，我们可能对后一帧中发生的事情更有把握。语言也是如此，机器翻译的输入和输出都为文字序列。"}, :properties {:color "purple"}} {:id #uuid "63e85bfa-065d-4a5c-9c05-883a97ee54ac", :page 52, :position {:bounding {:x1 163.1875, :y1 373.0625, :x2 276.103271484375, :y2 395.0625, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 373.0625, :x2 276.103271484375, :y2 395.0625, :width 1387.2, :height 1795.2}), :page 52}, :content {:text "标记和解析"}, :properties {:color "green"}} {:id #uuid "63e85c48-f29b-4dfc-bc64-804673c14419", :page 52, :position {:bounding {:x1 298.676513671875, :y1 373.0625, :x2 1088.6043701171875, :y2 395.0625, :width 1387.2, :height 1795.2}, :rects ({:x1 298.676513671875, :y1 373.0625, :x2 1088.6043701171875, :y2 395.0625, :width 1387.2, :height 1795.2}), :page 52}, :content {:text "这涉及到用属性注释文本序列。换句话说，输入和输出的数量基本上是相同的。"}, :properties {:color "purple"}} {:id #uuid "63e85dbf-eb8e-4dca-988f-900b204d453c", :page 52, :position {:bounding {:x1 0, :y1 110, :x2 1241.4100341796875, :y2 535.96875, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 110, :x2 0, :y2 130, :width 1387.2, :height 1795.2} {:x1 0, :y1 126, :x2 0, :y2 146, :width 1387.2, :height 1795.2} {:x1 949.3856201171875, :y1 443.515625, :x2 1241.4100341796875, :y2 465.515625, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 478.734375, :x2 1224.0009765625, :y2 501.3125, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 513.96875, :x2 208.36318969726562, :y2 535.96875, :width 1387.2, :height 1795.2}), :page 52}, :content {:text "下面是一个非常简单的示例，它使用“标记”来注释一个句子，该标记指示哪些单词引用命名实体。标记为“Ent”，是实体（entity）的简写。"}, :properties {:color "purple"}} {:id #uuid "63e85dd0-39d4-4570-a8a6-80f939ea2104", :page 52, :position {:bounding {:x1 135, :y1 542, :x2 1248, :y2 657, :width 1387.2, :height 1795.2}, :rects (), :page 52}, :content {:text "[:span]", :image 1676172751871}, :properties {:color "purple"}} {:id #uuid "63e85ddb-dbf5-4c91-957e-b7b2df7c9899", :page 52, :position {:bounding {:x1 163.1875, :y1 671.140625, :x2 298.6833190917969, :y2 693.140625, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 671.140625, :x2 298.6833190917969, :y2 693.140625, :width 1387.2, :height 1795.2}), :page 52}, :content {:text "自动语音识别"}, :properties {:color "green"}} {:id #uuid "63e85de9-0dce-4da8-ae0b-cb6d3ef72afe", :page 52, :position {:bounding {:x1 0, :y1 190, :x2 1223.9986572265625, :y2 728.359375, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 190, :x2 0, :y2 210, :width 1387.2, :height 1795.2} {:x1 320.9375305175781, :y1 671.140625, :x2 1223.9986572265625, :y2 693.71875, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 706.359375, :x2 252.348876953125, :y2 728.359375, :width 1387.2, :height 1795.2}), :page 52}, :content {:text "在语音识别中，输入序列是说话人的录音（如 图1.3.5 所示），输出序列是说话人所说内容的文本记录"}, :properties {:color "purple"}} {:id #uuid "63e85dfc-2947-49f2-a5f6-8ccb5cb6db1b", :page 52, :position {:bounding {:x1 0, :y1 222, :x2 1224.0101318359375, :y2 798.828125, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 222, :x2 0, :y2 242, :width 1387.2, :height 1795.2} {:x1 955.21337890625, :y1 741.59375, :x2 1224.0101318359375, :y2 763.59375, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 776.828125, :x2 456.7591552734375, :y2 798.828125, :width 1387.2, :height 1795.2}), :page 52}, :content {:text "是“序列到序列”的学习问题，其中输出比输入短得多。"}, :properties {:color "purple"}} {:id #uuid "63e85e05-bf1a-4fe1-ba24-9e4903128fc8", :page 52, :position {:bounding {:x1 163.1875, :y1 1196.125, :x2 276.103271484375, :y2 1218.125, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 1196.125, :x2 276.103271484375, :y2 1218.125, :width 1387.2, :height 1795.2}), :page 52}, :content {:text "文本到语音"}, :properties {:color "green"}} {:id #uuid "63e85e18-9f69-4fa1-9afe-a78b7f066f68", :page 52, :position {:bounding {:x1 659.7819213867188, :y1 1196.125, :x2 953.1859130859375, :y2 1218.125, :width 1387.2, :height 1795.2}, :rects ({:x1 659.7819213867188, :y1 1196.125, :x2 953.1859130859375, :y2 1218.125, :width 1387.2, :height 1795.2}), :page 52}, :content {:text "输入是文本，输出是音频文件"}, :properties {:color "purple"}} {:id #uuid "63e85e1e-831e-4b61-8a80-304283e49258", :page 52, :position {:bounding {:x1 163.1875, :y1 1280.125, :x2 253.52325439453125, :y2 1302.125, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 1280.125, :x2 253.52325439453125, :y2 1302.125, :width 1387.2, :height 1795.2}), :page 52}, :content {:text "机器翻译"}, :properties {:color "green"}} {:id #uuid "63e85e49-c105-4528-b794-34d8b07a4827", :page 52, :position {:bounding {:x1 0, :y1 302, :x2 1224.00927734375, :y2 1337.359375, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 302, :x2 0, :y2 322, :width 1387.2, :height 1795.2} {:x1 795.1654052734375, :y1 1280.125, :x2 1224.00927734375, :y2 1302.125, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1315.359375, :x2 230.90866088867188, :y2 1337.359375, :width 1387.2, :height 1795.2}), :page 52}, :content {:text "在机器翻译中，颠倒输入和输出的顺序非常重要。"}, :properties {:color "purple"}} {:id #uuid "63e85e7c-6ef4-4510-92ab-ec6195d5c1a3", :page 53, :position {:bounding {:x1 163.1875, :y1 172.09375, :x2 371.41729736328125, :y2 199.1875, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 172.09375, :x2 371.41729736328125, :y2 199.1875, :width 1387.2, :height 1795.2}), :page 53}, :content {:text "1.3.2 无监督学习"}, :properties {:color "red"}} {:id #uuid "63e85e94-c0d6-49eb-8155-ad3dde25fd3c", :page 53, :position {:bounding {:x1 0, :y1 14, :x2 1224.0013427734375, :y2 297.25, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 14, :x2 0, :y2 34, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 240.03125, :x2 1224.0013427734375, :y2 262.03125, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 275.25, :x2 208.60198974609375, :y2 297.25, :width 1387.2, :height 1795.2}), :page 53}, :content {:text "到目前为止，所有的例子都与监督学习有关，即我们向模型提供巨大数据集：每个样本包含特征和相应标签值。"}, :properties {:color "purple"}} {:id #uuid "63e85ea8-65c5-463d-ac57-2891654cf051", :page 53, :position {:bounding {:x1 0, :y1 30, :x2 1241.4100341796875, :y2 367.703125, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 30, :x2 0, :y2 50, :width 1387.2, :height 1795.2} {:x1 0, :y1 46, :x2 0, :y2 66, :width 1387.2, :height 1795.2} {:x1 313.21875, :y1 275.25, :x2 1223.97314453125, :y2 297.25, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 310.484375, :x2 1241.4100341796875, :y2 333.0625, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 345.703125, :x2 614.8350219726562, :y2 367.703125, :width 1387.2, :height 1795.2}), :page 53}, :content {:text "“监督学习”模型像一个打工仔，有一份极其专业的工作和一位极其平庸的老板。老板站在身后，准确地告诉模型在每种情况下应该做什么，直到模型学会从情况到行动的映射。取悦这位老板很容易，只需尽快识别出模式并模仿他们的行为即可。"}, :properties {:color "purple"}} {:id #uuid "63e85ec5-8678-40e8-b22d-43018a59b3ec", :page 53, :position {:bounding {:x1 0, :y1 78, :x2 1241.421875, :y2 487.515625, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 78, :x2 0, :y2 98, :width 1387.2, :height 1795.2} {:x1 0, :y1 94, :x2 0, :y2 114, :width 1387.2, :height 1795.2} {:x1 229.757568359375, :y1 394.484375, :x2 1241.405517578125, :y2 417.0625, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 429.71875, :x2 1224.00927734375, :y2 452.296875, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 464.9375, :x2 1241.421875, :y2 487.515625, :width 1387.2, :height 1795.2}), :page 53}, :content {:text "如果你的工作没有十分具体的目标，你就需要“自发”地去学习了。（如果你打算成为一名数据科学家，你最好培养这个习惯。）比如，你的老板可能会给你一大堆数据，然后让你用它做一些数据科学研究，却没有对结果有要求。我们称这类数据中不含有“目标”的机器学习问题为无监督学习（unsupervised learning），"}, :properties {:color "purple"}} {:id #uuid "63e85ed3-4ddc-4ac7-9543-67123c31e577", :page 53, :position {:bounding {:x1 219.640625, :y1 584.171875, :x2 455.9495849609375, :y2 606.171875, :width 1387.2, :height 1795.2}, :rects ({:x1 219.640625, :y1 584.171875, :x2 455.9495849609375, :y2 606.171875, :width 1387.2, :height 1795.2}), :page 53}, :content {:text "聚类（clustering）问题"}, :properties {:color "green"}} {:id #uuid "63e85ee4-555d-4365-a137-43685399dc0b", :page 53, :position {:bounding {:x1 0, :y1 158, :x2 1224.0030517578125, :y2 676.625, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 158, :x2 0, :y2 178, :width 1387.2, :height 1795.2} {:x1 0, :y1 174, :x2 0, :y2 194, :width 1387.2, :height 1795.2} {:x1 478.52130126953125, :y1 584.171875, :x2 1223.982177734375, :y2 606.171875, :width 1387.2, :height 1795.2} {:x1 219.640625, :y1 619.40625, :x2 1224.0030517578125, :y2 641.984375, :width 1387.2, :height 1795.2} {:x1 219.640625, :y1 654.625, :x2 558.3723754882812, :y2 676.625, :width 1387.2, :height 1795.2}), :page 53}, :content {:text "没有标签的情况下，我们是否能给数据分类呢？比如，给定一组照片，我们能把它们分成⻛景照片、狗、婴儿、猫和山峰的照片吗？同样，给定一组用戶的网⻚浏览记录，我们能否将具有相似行为的用戶聚类呢？"}, :properties {:color "purple"}} {:id #uuid "63e85eea-ce8e-48c3-9b3c-20e04595d863", :page 53, :position {:bounding {:x1 219.640625, :y1 703.40625, :x2 723.5900268554688, :y2 725.40625, :width 1387.2, :height 1795.2}, :rects ({:x1 219.640625, :y1 703.40625, :x2 723.5900268554688, :y2 725.40625, :width 1387.2, :height 1795.2}), :page 53}, :content {:text "主成分分析（principal component analysis）问题"}, :properties {:color "green"}} {:id #uuid "63e85f2d-7b4a-4628-aafe-4b1d88a2d9a1", :page 53, :position {:bounding {:x1 0, :y1 206, :x2 1224.0030517578125, :y2 795.859375, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 206, :x2 0, :y2 226, :width 1387.2, :height 1795.2} {:x1 0, :y1 222, :x2 0, :y2 242, :width 1387.2, :height 1795.2} {:x1 746.3178100585938, :y1 703.40625, :x2 1223.978759765625, :y2 725.40625, :width 1387.2, :height 1795.2} {:x1 219.640625, :y1 738.640625, :x2 1224.0030517578125, :y2 761.21875, :width 1387.2, :height 1795.2} {:x1 219.640625, :y1 773.859375, :x2 1023.1336669921875, :y2 795.859375, :width 1387.2, :height 1795.2}), :page 53}, :content {:text "我们能否找到少量的参数来准确地捕捉数据的线性相关属性？比如，一个球的运动轨迹可以用球的速度、直径和质量来描述。再比如，裁缝们已经开发出了一小部分参数，这些参数相当准确地描述了人体的形状，以适应衣服的需要。"}, :properties {:color "purple"}} {:id #uuid "63e85f35-1197-484b-93aa-24e5fcadf64d", :page 53, :position {:bounding {:x1 219.640625, :y1 893.09375, :x2 975.7266845703125, :y2 915.671875, :width 1387.2, :height 1795.2}, :rects ({:x1 219.640625, :y1 893.09375, :x2 975.7266845703125, :y2 915.671875, :width 1387.2, :height 1795.2}), :page 53}, :content {:text "因果关系（causality）和概率图模型（probabilistic graphical models）问题"}, :properties {:color "green"}} {:id #uuid "63e85f67-c20d-4dfa-84a2-15d3b5def31e", :page 53, :position {:bounding {:x1 219.640625, :y1 1012.328125, :x2 741.65625, :y2 1034.90625, :width 1387.2, :height 1795.2}, :rects ({:x1 219.640625, :y1 1012.328125, :x2 741.65625, :y2 1034.90625, :width 1387.2, :height 1795.2}), :page 53}, :content {:text "生成对抗性网络（generative adversarial networks）"}, :properties {:color "green"}} {:id #uuid "63e85f84-8aa8-420c-bcd5-e7d65f2ba871", :page 53, :position {:bounding {:x1 163.1875, :y1 1166.546875, :x2 371.41729736328125, :y2 1193.640625, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 1166.546875, :x2 371.41729736328125, :y2 1193.640625, :width 1387.2, :height 1795.2}), :page 53}, :content {:text "1.3.3 与环境互动"}, :properties {:color "red"}} {:id #uuid "63e85fa2-79f7-4906-b5b8-e30f88e58bf4", :page 53, :position {:bounding {:x1 0, :y1 398, :x2 1224.001220703125, :y2 1327.515625, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 398, :x2 0, :y2 418, :width 1387.2, :height 1795.2} {:x1 0, :y1 414, :x2 0, :y2 434, :width 1387.2, :height 1795.2} {:x1 388.88824462890625, :y1 1234.484375, :x2 1224.001220703125, :y2 1256.484375, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1269.703125, :x2 1224.0010986328125, :y2 1292.28125, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 1304.9375, :x2 889.1795654296875, :y2 1327.515625, :width 1387.2, :height 1795.2}), :page 53}, :content {:text "机器学习的输入（数据）来自哪里？机器学习的输出又将去往何方？到目前为止，不管是监督学习还是无监督学习，我们都会预先获取大量数据，然后启动模型，不再与环境交互。这里所有学习都是在算法与环境断开后进行的，被称为离线学习（offline learning）。"}, :properties {:color "purple"}} {:id #uuid "63e85fb1-ebdf-4556-994d-189b48570f95", :page 54, :position {:bounding {:x1 265, :y1 124, :x2 1144, :y2 565, :width 1387.2, :height 1795.2}, :rects (), :page 54}, :content {:text "[:span]", :image 1676173232723}, :properties {:color "purple"}} {:id #uuid "63e85fec-2569-4049-b85b-aa42a8954179", :page 54, :position {:bounding {:x1 163.1875, :y1 1194.640625, :x2 344.3307189941406, :y2 1221.734375, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 1194.640625, :x2 344.3307189941406, :y2 1221.734375, :width 1387.2, :height 1795.2}), :page 54}, :content {:text "1.3.4 强化学习"}, :properties {:color "red"}} {:id #uuid "63e87506-22df-4456-a200-f4a26f17cdde", :page 64, :position {:bounding {:x1 163.1875, :y1 174.609375, :x2 353.6259765625, :y2 207.609375, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 174.609375, :x2 353.6259765625, :y2 207.609375, :width 1387.2, :height 1795.2}), :page 64}, :content {:text "2.1 数据操作"}, :properties {:color "yellow"}} {:id #uuid "63e87531-3580-4a5b-b644-c7055b9216f9", :page 64, :position {:bounding {:x1 0, :y1 14, :x2 1238.703125, :y2 314.171875, :width 1387.2, :height 1795.2}, :rects ({:x1 0, :y1 14, :x2 0, :y2 34, :width 1387.2, :height 1795.2} {:x1 916.4899291992188, :y1 256.375, :x2 1238.703125, :y2 278.953125, :width 1387.2, :height 1795.2} {:x1 163.1875, :y1 291.59375, :x2 682.2796630859375, :y2 314.171875, :width 1387.2, :height 1795.2}), :page 64}, :content {:text "我们需要做两件重要的事：（1）获取数据；（2）将数据读入计算机后对其进行处理。"}, :properties {:color "purple"}} {:id #uuid "63e8776b-959b-48a1-981a-2f1986d63f41", :page 64, :position {:bounding {:x1 163.1875, :y1 600.28125, :x2 290.12628173828125, :y2 627.375, :width 1387.2, :height 1795.2}, :rects ({:x1 163.1875, :y1 600.28125, :x2 290.12628173828125, :y2 627.375, :width 1387.2, :height 1795.2}), :page 64}, :content {:text "2.1.1 入⻔"}, :properties {:color "red"}}], :extra {:page 73}}