{:highlights [{:id #uuid "62be4867-3d42-44c1-bd59-eff380be1cb4", :page 9, :position {:bounding {:x1 120.9625015258789, :y1 822.8000183105469, :x2 761.1208801269531, :y2 843.6000061035156, :width 952.9999999999999, :height 1348.5776522791446}, :rects ({:x1 120.9625015258789, :y1 822.8000183105469, :x2 761.1208801269531, :y2 843.6000061035156, :width 952.9999999999999, :height 1348.5776522791446}), :page 9}, :content {:text "CPU的运行状态分为内核态和用户态，按照这种方式可以将进程区分为内核进程和用户进程。"}, :properties {:color "yellow"}} {:id #uuid "62be4a87-69b7-485d-973d-8bcb8a816c16", :page 14, :position {:bounding {:x1 120.9625015258789, :y1 1010.2875061035156, :x2 818.4599761962891, :y2 1117.625, :width 952.9999999999999, :height 1348.5776522791446}, :rects ({:x1 162.0500030517578, :y1 1010.2875061035156, :x2 818.4599761962891, :y2 1031.0875091552734, :width 952.9999999999999, :height 1348.5776522791446} {:x1 124.57500457763672, :y1 1013.8000030517578, :x2 818.4599761962891, :y2 1027.4000091552734, :width 952.9999999999999, :height 1348.5776522791446} {:x1 120.9625015258789, :y1 1035.5375061035156, :x2 246.0001220703125, :y2 1056.3375091552734, :width 952.9999999999999, :height 1348.5776522791446} {:x1 120.9625015258789, :y1 1038.7375030517578, :x2 246.0001220703125, :y2 1053.9375, :width 952.9999999999999, :height 1348.5776522791446} {:x1 157.02500915527344, :y1 1072.7875061035156, :x2 673.5570678710938, :y2 1093.5875091552734, :width 952.9999999999999, :height 1348.5776522791446} {:x1 157.02500915527344, :y1 1075.9875030517578, :x2 673.5570678710938, :y2 1091.1875, :width 952.9999999999999, :height 1348.5776522791446} {:x1 157.02500915527344, :y1 1096.8249969482422, :x2 648.0548706054688, :y2 1117.625, :width 952.9999999999999, :height 1348.5776522791446} {:x1 157.02500915527344, :y1 1100.0250091552734, :x2 507.3951110839844, :y2 1115.2250061035156, :width 952.9999999999999, :height 1348.5776522791446}), :page 14}, :content {:text "fork执行以后创建的新进程和当前进程拥有着几乎一致的用户态地址空间。新进程和原进程之间存在一些小小的差异：fork系统调用的返回结果不一样，子进程返回值为0，父进程返回孩子的PID父子进程之间的PPID也不一样，其中子进程的PPID的进程为它的父进程"}, :properties {:color "yellow"}} {:id #uuid "62c23ce1-3b79-4bba-900c-5567ff40cd95", :page 14, :position {:bounding {:x1 127.83750457689166, :y1 258.1500061005354, :x2 726.9750244133174, :y2 278.94999389350414, :width 978, :height 1383.9548204921339}, :rects ({:x1 183.71249694749713, :y1 258.1500061005354, :x2 726.9750244133174, :y2 278.94999389350414, :width 978, :height 1383.9548204921339} {:x1 127.83750457689166, :y1 260.875012204051, :x2 181.59311218187213, :y2 275.2750061005354, :width 978, :height 1383.9548204921339}), :page 14}, :content {:text "system函数可以创建一个新进程，新进程使用shell脚本执行传入的命令command。"}, :properties {:color "yellow"}} {:id #uuid "62c23d31-a4bf-4ec4-a7fd-797042ea65f6", :page 14, :position {:bounding {:x1 124.13749999925494, :y1 562.8125152587891, :x2 790.9875366203487, :y2 583.6125030517578, :width 978, :height 1383.9548204921339}, :rects ({:x1 124.13749999925494, :y1 562.8125152587891, :x2 303.0512573234737, :y2 583.6125030517578, :width 978, :height 1383.9548204921339} {:x1 362.61250610277057, :y1 562.8125152587891, :x2 715.4257690422237, :y2 583.6125030517578, :width 978, :height 1383.9548204921339} {:x1 774.9499999992549, :y1 562.8125152587891, :x2 790.9875366203487, :y2 583.6125030517578, :width 978, :height 1383.9548204921339} {:x1 306.73750610277057, :y1 565.5250091552734, :x2 360.49312133714557, :y2 579.9250030517578, :width 978, :height 1383.9548204921339} {:x1 719.0749999992549, :y1 565.5250091552734, :x2 772.8306152336299, :y2 579.9250030517578, :width 978, :height 1383.9548204921339}), :page 14}, :content {:text "除了可以执行shell指令，system函数还可以嵌入其他编程语言所编写的程序，比如python："}, :properties {:color "yellow"}} {:id #uuid "62c23d47-0324-4377-9b4a-a3d941807e90", :page 14, :position {:bounding {:x1 124.13749999925494, :y1 474.00001525878906, :x2 840.7366210930049, :y2 520.7000274658203, :width 978, :height 1383.9548204921339}, :rects ({:x1 124.13749999925494, :y1 474.00001525878906, :x2 300.55037231370807, :y2 494.8000183105469, :width 978, :height 1383.9548204921339} {:x1 325.30000610277057, :y1 474.00001525878906, :x2 840.7366210930049, :y2 494.8000183105469, :width 978, :height 1383.9548204921339} {:x1 304.2125122062862, :y1 476.7250213623047, :x2 322.13106079027057, :y2 491.12501525878906, :width 978, :height 1383.9548204921339} {:x1 124.13749999925494, :y1 499.9000244140625, :x2 220.36494750902057, :y2 520.7000274658203, :width 978, :height 1383.9548204921339}), :page 14}, :content {:text "如果在程序执行过程使用ps命令查看所有进程，我们会发现创建了3个进程，并且3个进程之间存在父子亲缘关系。"}, :properties {:color "yellow"}} {:id #uuid "62c241c2-bb1d-4867-a646-3eae3064459d", :page 17, :position {:bounding {:x1 124.13749999925494, :y1 900.7749862670898, :x2 842.5587036125362, :y2 947.4749908447266, :width 978, :height 1383.9548204921339}, :rects ({:x1 175.00000305101275, :y1 900.7749862670898, :x2 463.66992492601275, :y2 921.5749893188477, :width 978, :height 1383.9548204921339} {:x1 505.7874938957393, :y1 900.7749862670898, :x2 842.5587036125362, :y2 921.5749893188477, :width 978, :height 1383.9548204921339} {:x1 127.83750457689166, :y1 903.4874877929688, :x2 172.633853148669, :y2 917.8874893188477, :width 978, :height 1383.9548204921339} {:x1 467.32499999925494, :y1 903.4874877929688, :x2 503.16206664964557, :y2 917.8874893188477, :width 978, :height 1383.9548204921339} {:x1 124.13749999925494, :y1 926.6749877929688, :x2 188.2933227531612, :y2 947.4749908447266, :width 978, :height 1383.9548204921339} {:x1 239.13749999925494, :y1 926.6749877929688, :x2 816.4648315422237, :y2 947.4749908447266, :width 978, :height 1383.9548204921339} {:x1 191.97500915452838, :y1 929.3874893188477, :x2 236.77133483812213, :y2 943.7874908447266, :width 978, :height 1383.9548204921339}), :page 17}, :content {:text "exec*是一系列的系统调用。它们通常适用于在fork之后，将子进程的指令部分进行替换修改。当进程执行到exec*系统调用的时候，它会将传入的指令来取代进程本身的代码段、数据段、栈和堆，"}, :properties {:color "yellow"}} {:id #uuid "62c2424c-8522-4fff-9557-8c7304333178", :page 18, :position {:bounding {:x1 124.13749999925494, :y1 771.2625122070312, :x2 853.2875244133174, :y2 792.0625305175781, :width 978, :height 1383.9548204921339}, :rects ({:x1 124.13749999925494, :y1 771.2625122070312, :x2 316.5799743644893, :y2 792.0625305175781, :width 978, :height 1383.9548204921339} {:x1 376.1250183098018, :y1 771.2625122070312, :x2 751.6412231437862, :y2 792.0625305175781, :width 978, :height 1383.9548204921339} {:x1 837.2499877922237, :y1 771.2625122070312, :x2 853.2875244133174, :y2 792.0625305175781, :width 978, :height 1383.9548204921339} {:x1 320.2500183098018, :y1 773.9750366210938, :x2 374.0056335441768, :y2 788.3750305175781, :width 978, :height 1383.9548204921339} {:x1 755.3000366203487, :y1 773.9750366210938, :x2 835.9333984367549, :y2 788.3750305175781, :width 978, :height 1383.9548204921339}), :page 18}, :content {:text "实际上，我们之前所使用的system函数以及从bash或者是其他shell启动进程的本质就是fork+exec。"}, :properties {:color "yellow"}} {:id #uuid "62c2428c-f76e-410b-b303-03a20e74c3a5", :page 25, :position {:bounding {:x1 124.13749999925494, :y1 284.06250762939453, :x2 853.1308471672237, :y2 329.52500915527344, :width 978, :height 1383.9548204921339}, :rects ({:x1 124.13749999925494, :y1 284.06250762939453, :x2 853.1308471672237, :y2 304.8625030517578, :width 978, :height 1383.9548204921339} {:x1 124.13749999925494, :y1 308.7250061035156, :x2 310.35124511644244, :y2 329.52500915527344, :width 978, :height 1383.9548204921339}), :page 25}, :content {:text "大致上来说，所谓守护进程(daemon)，就是在默默运行在后台的进程，也称作“后台服务进程”，通常守护进程的命名会以d结尾。"}, :properties {:color "yellow"}}]}